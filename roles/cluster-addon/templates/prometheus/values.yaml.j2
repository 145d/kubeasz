## Provide a k8s version to auto dashboard import script example: kubeTargetVersionOverride: 1.16.6
kubeTargetVersionOverride: "{{ K8S_VER.stdout }}"

## Configuration for alertmanager
alertmanager:
  enabled: true
  config:
    route:
      receiver: 'null'
      routes:
      - receiver: 'null'
        matchers:
          - alertname =~ "InfoInhibitor|Watchdog"
    receivers:
    - name: 'null'

  ## Configuration for Alertmanager service
  service:
    nodePort: 30902
    type: NodePort 

## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
grafana:
  enabled: true
  adminPassword: Admin1234!
  service:
    nodePort: 30903
    type: NodePort 

## Component scraping the kube api server
kubeApiServer:
  enabled: true

## Component scraping the kubelet and kubelet-hosted cAdvisor
kubelet:
  enabled: true

## Component scraping the kube controller manager
kubeControllerManager:
  enabled: true
  endpoints:
{% for h in groups['kube_master'] %}
  - {{ h }}
{% endfor %}

## Component scraping coreDns. Use either this or kubeDns
coreDns:
  enabled: true

## Component scraping etcd
kubeEtcd:
  enabled: true
  endpoints:
{% for h in groups['etcd'] %}
  - {{ h }}
{% endfor %}

  ## Configure secure access to the etcd cluster by loading a secret into prometheus and
  ## specifying security configuration below. For example, with a secret named etcd-client-cert
  serviceMonitor:
    scheme: https
    insecureSkipVerify: true 
    serverName: localhost
    caFile: /etc/prometheus/secrets/etcd-client-cert/etcd-ca
    certFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client
    keyFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client-key


## Component scraping kube scheduler
kubeScheduler:
  enabled: true
  endpoints:
{% for h in groups['kube_master'] %}
  - {{ h }}
{% endfor %}

## Component scraping kube proxy
kubeProxy:
  enabled: true
  endpoints:
{% for h in groups['kube_master'] %}
  - {{ h }}
{% endfor %}
{% for h in groups['kube_node'] %}
{% if h not in groups['kube_master'] %}
  - {{ h }}
{% endif %}
{% endfor %}

## Manages Prometheus and Alertmanager components
prometheusOperator:
  enabled: true
  service:
    nodePort: 30899
    nodePortTls: 30900
    type: NodePort 

## Deploy a Prometheus instance
prometheus:
  enabled: true

  ## Configuration for Prometheus service
  service:
    nodePort: 30901
    type: NodePort 

  prometheusSpec:
    replicas: 1

    secrets:
    - etcd-client-cert

    storageSpec: {}
    ## Using PersistentVolumeClaim
    ##
    #  volumeClaimTemplate:
    #    spec:
    #      storageClassName: gluster
    #      accessModes: ["ReadWriteOnce"]
    #      resources:
    #        requests:
    #          storage: 50Gi
    #    selector: {}

    ## Using tmpfs volume
    ##
    #  emptyDir:
    #    medium: Memory
